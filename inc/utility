#pragma once

#include "kstddef"
#include "type_traits"

namespace _KSTD
{
    template<typename T>
    constexpr __forceinline remove_reference_t<T>&& move(T&& value)
    {
        return static_cast<remove_reference_t<T>&&>(value);
    }

    template<typename T>
    constexpr __forceinline T&& forward(remove_reference_t<T>& t)
    {
        return static_cast<T&&>(t);
    }

    template<typename T>
    constexpr __forceinline T&& forward(remove_reference_t<T>&& t)
    {
        return static_cast<T&&>(t);
    }
}